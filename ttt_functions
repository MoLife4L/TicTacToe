
def display_board(board):
    print(f'   {board[7]}   |   {board[8]}   |   {board[9]}   ')
    print("--------------------")
    print(f'   {board[4]}   |   {board[5]}   |   {board[6]}   ')
    print("--------------------")
    print(f'   {board[1]}   |   {board[2]}   |   {board[3]}   ')

def player_input():
    choice = ''
    possible_choices = ['x','X','o','O']
    while choice not in possible_choices:
        choice = input("Select X or O: ")
    return choice 

def place_marker(board, marker, position):
    board[position] = marker

def win_check(board, mark):
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or 
    (board[4] == mark and board[5] == mark and board[6] == mark) or 
    (board[1] == mark and board[2] == mark and board[3] == mark) or 
    (board[7] == mark and board[4] == mark and board[1] == mark) or 
    (board[8] == mark and board[5] == mark and board[2] == mark) or 
    (board[9] == mark and board[6] == mark and board[3] == mark) or 
    (board[7] == mark and board[5] == mark and board[3] == mark) or 
    (board[9] == mark and board[5] == mark and board[1] == mark)) 

import random

def choose_first():
    if random.randint(0,1) == 0:
        return 'Player 1'
    else:
        return 'Player 2'

def space_check(board, position):
    return board[position] == ''

def full_board_check(board):
    for space in board:
        if space == '':
            return False
    else:
        return True

def player_choice(board):
    next_poisition = ''
    selections = ['1','2','3','4','5','6','7','8','9']
    while next_poisition not in selections:
        next_poisition = input("What is player's next position (numpad)")
    while not space_check(board,int(next_poisition)):
        next_poisition = input("What is player's next position. Prior position occupied (numpad)")
    return int(next_poisition)    

def replay():
    selections = ['y','Y','N', 'n']
    again = ''
    while again not in selections:
        again = input("would you like to play again? (y/n)")
    if again == 'y' or again == 'Y':
        return True 
    else:
        return False
